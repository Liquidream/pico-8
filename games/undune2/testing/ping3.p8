pico-8 cartridge // http://www.pico-8.com
version 32
__lua__
function _init()
 printh("....")
 ping2({},8,8,
  function(unit,x,y)
   --printh(t().." > "..x..","..y)
   mset(x,y,1)   
   cls(15)map(0,0,0,0,32,32)flip()
  end,
 6)
end

function _update()
end

function _draw()
 cls(15)
 map(0,0,0,0,32,32)
end

function ping2(unit,mx,my,func,max_dist,skip_yield)
 cls(15)flip()

--for r=0,max_dist do
r=max_dist

	x=0
	y=r
 d=1.25-r
 while x<y do
  if d<0 then
   d=d+2*x+3
   x+=1
  else
   d=d+2*(x-y)+5
   x+=1
   y-=1
  end  
  printh("d="..d.." x="..x)
  map()flip()
  mset(mx-x,my+y,1)  
  map()flip()
  mset(mx+x,my+y,1)
  map()flip()
  mset(mx-x,my-y,1)
  map()flip()
  mset(mx+x,my-y,1)
  map()flip()
  mset(mx+y,my-x,1)
  map()flip()
  mset(mx+y,my+x,1)
  map()flip()
  mset(mx-y,my-x,1)
  map()flip()
  mset(mx-y,my+x,1)
  map()flip()
--  if(r==1)stop()
  end
--end
end

function ping(unit,x,y,func,max_dist,skip_yield)
 for t=0,max_dist or 1,.04 do
 	local xx,yy=mid(flr(x+t*cos(t)),61),mid(flr(y+t*sin(t)),61)
		if (func(unit,xx,yy)) return xx,yy
  -- give others a chance!  
  --if (not skip_yield) yield()  -- (better perf for unit updates, but causes pauses on start/deploy harvester)  
 end
end
__gfx__
00000000808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000080808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000080808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700080808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000080808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
